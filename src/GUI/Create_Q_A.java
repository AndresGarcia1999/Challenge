/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.Pregunta_DAO;
import Entity.Opcion;
import Entity.Pregunta;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author andre
 */
public class Create_Q_A extends javax.swing.JFrame {

    /**
     * Creates new form Create
     */
    public Create_Q_A() {
        
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEnunciado = new javax.swing.JTextField();
        txtOpcA = new javax.swing.JTextField();
        txtOpcC = new javax.swing.JTextField();
        txtOpcB = new javax.swing.JTextField();
        txtOpcD = new javax.swing.JTextField();
        createQ = new javax.swing.JButton();
        categoriaCB = new javax.swing.JComboBox<>();
        correctAnsCB = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtOpcA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpcAActionPerformed(evt);
            }
        });

        txtOpcB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpcBActionPerformed(evt);
            }
        });

        txtOpcD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpcDActionPerformed(evt);
            }
        });

        createQ.setText("Crear");
        createQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createQActionPerformed(evt);
            }
        });

        categoriaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Muy Facíl", "Facíl", "Medio", "Dificíl", "Muy Difícil" }));

        correctAnsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Opción A", "Opción B", "Opción C", "Opción D" }));
        correctAnsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctAnsCBActionPerformed(evt);
            }
        });

        jLabel1.setText("Inserte el enunciado de la pregunta:");

        jLabel2.setText("Inserte la opción A");

        jLabel3.setText("Inserte la opción C");

        jLabel4.setText("Inserte la opción B");

        jLabel5.setText("Inserte la opción D");

        jLabel6.setText("Categoría");

        jLabel7.setText("Opción correcta");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        jLabel8.setText("id Pregunta");

        backBtn.setText("Volver");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnunciado, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(categoriaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(69, 69, 69))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtOpcA)
                            .addComponent(txtOpcC, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(backBtn)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(txtOpcB)
                            .addComponent(txtOpcD, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correctAnsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(createQ)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEnunciado, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoriaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOpcA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOpcB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(correctAnsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOpcC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOpcD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createQ)
                    .addComponent(backBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOpcDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpcDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOpcDActionPerformed

    private void txtOpcAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpcAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOpcAActionPerformed

    private void txtOpcBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpcBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOpcBActionPerformed

    private void createQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createQActionPerformed
        // TODO add your handling code he
        System.out.println(categoriaCB.getSelectedIndex() + 1);
        System.out.println(correctAnsCB.getSelectedItem().toString());

        if (validation()) {

            Pregunta_DAO pdao = new Pregunta_DAO();

            int resp = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de que desea registrar esta pregunta?", "Attention!", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (resp == JOptionPane.YES_OPTION) {
                
                Pregunta pregunta = new Pregunta(Integer.parseInt(txtId.getText()), txtEnunciado.getText(), categoriaCB.getSelectedIndex() + 1, getOpciones(correctAnsCB.getSelectedItem().toString()));

                if(pdao.savePregunta(pregunta)){
                    
                    JOptionPane.showMessageDialog(rootPane, "Registro existoso !");
                    resetFields();

                
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Este id ya existe !");
                }

                //JOptionPane.showMessageDialog(rootPane, "Este id ya está registrado");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Por favor rellena todos los cambios");
            }
        }
    }//GEN-LAST:event_createQActionPerformed

    

    private boolean validation() {

        if (txtEnunciado.getText().equals("") || txtOpcA.getText().equals("") || txtOpcB.getText().equals("") || txtOpcC.getText().equals("") || txtOpcD.getText().equals("") || txtId.getText().equals("")) {
            return false;
        }
        return true;

    }
    
    private void resetFields() {
        
        txtEnunciado.setText("");
        txtOpcA.setText("");
        txtOpcB.setText("");
        txtOpcC.setText("");
        txtOpcD.setText("");
        txtId.setText("");
        
    }
    private void correctAnsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctAnsCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_correctAnsCBActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        char character = evt.getKeyChar();
        if (Character.isLetter(character)) {
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "numbers only!");
        }
    }//GEN-LAST:event_txtIdKeyTyped

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        
        Config config = new Config();
        config.setVisible(true);
        Create_Q_A.this.dispose();
        
    }//GEN-LAST:event_backBtnActionPerformed

    private ArrayList<Opcion> getOpciones(String opcCorrecta) {

        Opcion opcionA = null;
        Opcion opcionB = null;
        Opcion opcionC = null;
        Opcion opcionD = null;

        switch (opcCorrecta) {

            case "Opción A":
                opcionA = new Opcion(txtOpcA.getText(), true, Integer.parseInt(txtId.getText()));
                opcionB = new Opcion(txtOpcB.getText(), false, Integer.parseInt(txtId.getText()));
                opcionC = new Opcion(txtOpcC.getText(), false, Integer.parseInt(txtId.getText()));
                opcionD = new Opcion(txtOpcD.getText(), false, Integer.parseInt(txtId.getText()));
                break;

            case "Opción B":
                opcionA = new Opcion(txtOpcA.getText(), false, Integer.parseInt(txtId.getText()));
                opcionB = new Opcion(txtOpcB.getText(), true, Integer.parseInt(txtId.getText()));
                opcionC = new Opcion(txtOpcC.getText(), false, Integer.parseInt(txtId.getText()));
                opcionD = new Opcion(txtOpcD.getText(), false, Integer.parseInt(txtId.getText()));
                break;

            case "Opción C":
                opcionA = new Opcion(txtOpcA.getText(), false, Integer.parseInt(txtId.getText()));
                opcionB = new Opcion(txtOpcB.getText(), false, Integer.parseInt(txtId.getText()));
                opcionC = new Opcion(txtOpcC.getText(), true, Integer.parseInt(txtId.getText()));
                opcionD = new Opcion(txtOpcD.getText(), false, Integer.parseInt(txtId.getText()));
                break;

            case "Opción D":
                opcionA = new Opcion(txtOpcA.getText(), false, Integer.parseInt(txtId.getText()));
                opcionB = new Opcion(txtOpcB.getText(), false, Integer.parseInt(txtId.getText()));
                opcionC = new Opcion(txtOpcC.getText(), false, Integer.parseInt(txtId.getText()));
                opcionD = new Opcion(txtOpcD.getText(), true, Integer.parseInt(txtId.getText()));
                break;

        }

        ArrayList<Opcion> opciones = new ArrayList();

        opciones.add(opcionA);
        opciones.add(opcionB);
        opciones.add(opcionC);
        opciones.add(opcionD);

        return opciones;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Create_Q_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Create_Q_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Create_Q_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Create_Q_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create_Q_A and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Create_Q_A().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> categoriaCB;
    private javax.swing.JComboBox<String> correctAnsCB;
    private javax.swing.JButton createQ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtEnunciado;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtOpcA;
    private javax.swing.JTextField txtOpcB;
    private javax.swing.JTextField txtOpcC;
    private javax.swing.JTextField txtOpcD;
    // End of variables declaration//GEN-END:variables
}
